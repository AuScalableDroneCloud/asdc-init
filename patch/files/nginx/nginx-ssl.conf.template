worker_processes 1;

# Change this if running outside docker!
pid /tmp/nginx.pid;
error_log /tmp/nginx.error.log;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # set to 'on' if nginx worker_processes > 1
  use epoll;
}

http {
  include /etc/nginx/mime.types;

  # fallback in case we can't determine a type
  default_type application/octet-stream;
  access_log /tmp/nginx.access.log combined;
  sendfile on;

  upstream app_server {
    # fail_timeout=0 means we always retry an upstream even if it failed
    # to return a good HTTP response

    # for UNIX domain socket setups
    server unix:/tmp/gunicorn.sock fail_timeout=0;
  }

  # Redirect all non-encrypted to encrypted
  server {
      server_name $WO_HOST;
      listen 8080;
      return 301 https://$WO_HOST$request_uri;
  }

  server {
    listen 8000 default_server ssl;

    client_max_body_size 0;

    server_name $WO_HOST;

    ssl_certificate /webodm/nginx/ssl/cert.pem;
    ssl_certificate_key /webodm/nginx/ssl/key.pem;

    keepalive_timeout 5;

    proxy_connect_timeout 60s;
    proxy_read_timeout 300000s;

    # Disable port in redirects
    port_in_redirect off;

    # path for static files
    location /static {
      root /webodm/build;
    }

    # path for certain media files that don't need permissions enforced
    location /media/CACHE {
      root /webodm/app;
    }
    location /media/settings {
      autoindex on;
      root /webodm/app;
    }

    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # enable this if and only if you use HTTPS
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header Host $http_host;

      # we don't want nginx trying to do something clever with
      # redirects, we set the Host: header above already.
      proxy_redirect off;
      proxy_pass http://app_server;
    }

    #tusd proxy
    location /files/ {
      proxy_pass http://tusd.default.svc.cluster.local/files/;

      #access_log  /var/log/nginx/tusd.access.log;
      #error_log  /var/log/nginx/tusd.error.log;

      #https://github.com/tus/tusd/blob/master/examples/nginx.conf
      # Disable request and response buffering
      proxy_request_buffering  off;
      proxy_buffering          off;
      proxy_http_version       1.1;

      include proxy.conf;
    }

    #cesium proxy
    location /cesium/ {
      proxy_pass http://cesium.default.svc.cluster.local:8080/cesium/;
      include proxy.conf;
    }

    #ept proxy
    location /ept/ {
      proxy_pass http://cesium.default.svc.cluster.local:3000/;
      include proxy.conf;
    }

    #cesium-api proxy
    location /cesium-api/ {
      proxy_pass http://cesium-api.default.svc.cluster.local:8081/;
      include proxy.conf;
    }

    #terria proxy
    location /terria/ {
      proxy_pass http://terria.default.svc.cluster.local:3001/;
      include proxy.conf;
    }

    #filestash proxy
    #location /filestash/ {
    #  proxy_pass http://filestash.default.svc.cluster.local:8334/;
    #  include proxy.conf;
    #  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    #  proxy_read_timeout   86400;
    #}
  }

  #dronedb proxy (subdomain)
  #server {
  #  server_name registry.$WO_HOST;
  #  listen 8000 ssl; # deferred;
  #  ssl_certificate /webodm/nginx/ssl/cert.pem;
  #  ssl_certificate_key /webodm/nginx/ssl/key.pem;
  #  location / {
  #    proxy_pass http://registry.dronedb.svc.cluster.local:80;
  #    include proxy.conf;
  #  }
  #}


}

